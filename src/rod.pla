import STDLIB
    predef call, puts
end
;
; CALL return register structure.
;
const acc         = 0
const xreg        = 1
const yreg        = 2
const preg        = 3
;
; Hardware constants
;
const speaker=$C030
const showgraphics=$C050
const showtext=$C051
const showfull=$C052
const showmix=$C053
const TRUE=$FFFF
const FALSE=$0000
const showpage1=$C054
const showpage2=$C055
const showlores=$C056
const showhires=$C057
const keyboard=$C000
const keystrobe=$C010
const hgr1=$2000
const hgr2=$4000
const page1=0
const page2=1
byte exitmsg[] = "Press any key to exit.\n"
byte goodbye[] = "That's all, folks!\n"
byte i, j, k, w, fmi, fmk, color
def textmode
    call(0, 0, 0, 0, $FB39)
end
def home
    call(0, 0, 0, 0, $FC58)
end
def gotoxy(x, y)
    ^($24) = x
    call(y, 0, 0, 0, $FB5B)
end
def grmode
    call(0, 0, 0, 0, $FB40)
    ^showlores
end
def grcolor(color)
    call(color, 0, 0, 0, $F864)
end
def grplot(x, y)
    call(y, 0, x, 0, $F800)
end
def colors
    while TRUE
        for w = 3 to 50
	    for i = 1 to 19
	        for j = 0 to 19
		    k = i + j
		    color = (j * 3) / (i + 3) + i * w / 12
		    fmi = 40 - i
		    fmk = 40 - k
		    call(color, 0, 0, 0, $F864) ;grcolor(color);
		    call(k, 0, i, 0, $F800)     ;grplot(i, k);
		    call(i, 0, k, 0, $F800)     ;grplot(k, i);
		    call(fmk, 0, fmi, 0, $F800) ;grplot(fmi, fmk);
		    call(fmi, 0, fmk, 0, $F800) ;grplot(fmk, fmi);
		    call(fmi, 0, k, 0, $F800)   ;grplot(k, fmi);
		    call(k, 0, fmi, 0, $F800)   ;grplot(fmi, k);
		    call(fmk, 0, i, 0, $F800)   ;grplot(i, fmk);
		    call(i, 0, fmk, 0, $F800)   ;grplot(fmk, i);
		    if ^keyboard >= 128
		        return ^keystrobe
		    fin
		next
	    next
	next
    loop
end


grmode()
gotoxy(10,22)
puts(@exitmsg)
colors()
textmode()
home()
puts(@goodbye)
done