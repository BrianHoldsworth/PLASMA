;10 S=8190: DIM F(8191): N=0
;20 FOR I=0 TO S: F(I)=1: NEXT I
;30 FOR I=0 TO S
;   IF F(I)=0 THEN 80
;40   P=I+I+3: K=I+P
;50   IF K>S THEN 70
;60     F(K)=0: K=K+P
;       GOTO 50
;70   N=N+1: REM PRINT P;" ";
;80 NEXT I
;90 PRINT: PRINT N;" PRIMES": END

import STDLIB
    predef syscall, call, memset, getc, putc, puts, putln
    byte MACHID
end

const FALSE     = 0
const TRUE      = !FALSE
const maxPrime  = 8190
const numPrimes = maxPrime+1

byte flag[numPrimes]
byte iter
word prime, i, k, count
byte strPrimes[] = " primes.\n"

def beep
  return putc(7)
end

def puti(i)
  if i < 0
    putc('-')
    i = -i
  fin
  if i < 10
    putc(i + '0')
  else
    puti(i / 10)
    putc(i % 10 + '0')
  fin
end

beep
for iter = 1 to 10
  memset(@flag, numPrimes, TRUE)
  count = 0
  for i = 0 to maxPrime
    if flag[i]
      prime = i + i + 3
      k = i + prime
      while k <= maxPrime
        flag[k] = FALSE
        k = k + prime
      loop
      count = count + 1
      ;puti(prime)
      ;putln
    fin
  next
next
beep
puti(count)
puts(@strPrimes)
done