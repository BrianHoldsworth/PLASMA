include "inc/cmdsys.plh"
import memmgr
    predef sweep, brk, sbrk
    predef hmemNew, hmemLock, hmemUnlock, hmemRef, hmemDel, hmemFre
    const MAX_MEMBLK_SIZE = $2000
end
word a, b, c, d, e, memptr
word memfre, memlrgst

def putln
    return putc($0D)
end
def putb(hexb)
    return call($FDDA, hexb, 0, 0, 0)
end
def puth(hex)
    return call($F941, hex >> 8, hex, 0, 0)
end
def puti(i)
  if i < 0; putc('-'); i = -i; fin
  if i < 10
    putc(i + '0')
  else
    puti(i / 10)
    putc(i % 10 + '0')
  fin
end

sbrk($3000) // Set small pool size

memfre=hmemFre(@memlrgst);puth(memfre); putc(' '); puth(memlrgst); putln
a = hmemNew(MAX_MEMBLK_SIZE)
b = hmemNew(MAX_MEMBLK_SIZE)
c = hmemNew(MAX_MEMBLK_SIZE)

d = hmemNew($1000)
e = hmemNew(768)
hmemLock(d)
memptr = hmemLock(e)
if memptr; *memptr = $EEEE; fin
hmemUnlock(d)
hmemUnlock(e)
hmemDel(d)
memfre=hmemFre(@memlrgst);puth(memfre); putc(' '); puth(memlrgst); putln

memptr = hmemLock(a)
if memptr; memset(memptr, $1111, MAX_MEMBLK_SIZE); fin
hmemUnlock(a)
memptr = hmemLock(b)
if memptr; memset(memptr, $2222, MAX_MEMBLK_SIZE); fin
hmemUnlock(b)
memptr = hmemLock(c)
if memptr; memset(memptr, $3333, MAX_MEMBLK_SIZE); fin
hmemUnlock(c)
memptr = hmemLock(a)
if memptr; puth(a); putc('='); puth(*(memptr + MAX_MEMBLK_SIZE - 2)); putln; fin
hmemUnlock(a)
hmemDel(a)
memptr = hmemLock(b)
if memptr; puth(b); putc('='); puth(*(memptr + MAX_MEMBLK_SIZE - 2)); putln; fin
hmemUnlock(b)
hmemDel(b)
memptr = hmemLock(c)
if memptr; puth(c); putc('='); puth(*(memptr + MAX_MEMBLK_SIZE - 2)); putln; fin
hmemUnlock(c)
hmemDel(c)

memptr = hmemLock(e)
if memptr; puth(e); putc('='); puth(*memptr); putln; fin
hmemUnlock(e)
hmemDel(e)
memfre=hmemFre(@memlrgst);puth(memfre); putc(' '); puth(memlrgst); putln
done
