import dgr
	word[] dgrbuff
	predef drgPlot, dgrHLin, dgrVLin, dgrBLT, dgrTile, dgrTileStr, dgrFill
	predef dgrMode, txtMode, dgrShow, dgrColor, dgrLine, dgrClear
end

byte[] sprite1 = $0,$0,$5,$5,$5,$5,$0,$0
byte[]         = $0,$5,$A,$A,$A,$A,$5,$0
byte[]         = $5,$A,$F,$F,$F,$F,$A,$5
byte[]         = $5,$A,$F,$0,$0,$F,$A,$5
byte[]         = $5,$A,$F,$0,$0,$F,$A,$5
byte[]         = $5,$A,$F,$F,$F,$F,$A,$5
byte[]         = $0,$5,$A,$A,$A,$A,$5,$0
byte[]         = $0,$0,$5,$5,$5,$5,$0,$0

byte[] tile1 = $88,$11,$88,$11,$88,$11,$AA,$00
byte[]       = $88,$11,$88,$11,$88,$11,$AA,$00
byte[]       = $88,$11,$88,$11,$88,$11,$AA,$00
byte[]       = $0A,$05,$0A,$05,$0A,$05,$0A,$00

//
// Test routine
//
def dgrTest
	byte b, l, k
	word i, j, ii, ij
	
	b = dgrMode
	for k = 15 downto 0
		dgrClear(dgrbuff[0], k)
	next
	for l = 0 to 79
		dgrColor(l)
		dgrLine(dgrbuff[0], 0, 0, l, 47)
	next
	for l = 47 downto 0
		dgrColor(l)
		dgrLine(dgrbuff[0], 0, 0, 79, l)
	next
	ii = 2
	ij = -1
	i = 40
	j = 10
	^$C010
	while ^$C000 < 128
		dgrFill(dgrbuff[b], k, k, @tile1)
		dgrBLT(dgrbuff[b], i, j, 8, 8, @sprite1)
		b = dgrShow(b)
		k++
		i = i + ii
		if i < -3 or i > 75
			ii = -ii
		fin
		j = j + ij
		if j < -3 or j > 43
			ij = -ij
		fin
	loop
	^$C010
	txtMode
end

dgrTest
done